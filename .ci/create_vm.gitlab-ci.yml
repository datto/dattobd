create:rhel9:vm:
  stage: create vm
  tags:
    - docker-throttled
  script:
    - apt-get update -y
    - apt-get install curl -y
    - echo "Creating virtual machine with RHEL9"
    - 'curl --location "http://qapi.datto.net/v1/agent" --header "Content-Type: application/json" --data "{\"os\":\"rhel9\",\"agent_type\":\"\",\"region\":\"nwk\",\"ttl\":1}" > createVmOutput.txt'
    - OUTPUT=$(cat createVmOutput.txt)
    - echo $OUTPUT
    - RHEL9_VM_ID=$(echo $OUTPUT | grep -o -P 'id.{0,9}' | cut -c 6-11)
    - echo "RHEL9_VM_ID=$RHEL9_VM_ID" >> variables_rhel9.txt
    - echo "Sleep for 3 minutes to wait for VM to be ready..."
    - sleep 180
    - curl -X GET http://qapi.datto.net/v1/agent/$RHEL9_VM_ID
    - RHEL9_VM_IP=$(curl -X GET http://qapi.datto.net/v1/agent/$RHEL9_VM_ID | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}')
    - echo "RHEL9_VM_IP=$RHEL9_VM_IP" >> variables_rhel9.txt
  artifacts:
    reports:
      dotenv: variables_rhel9.txt

create:debian11:vm:
  stage: create vm
  tags:
    - docker-throttled
  script:
    - apt-get update -y
    - apt-get install curl -y
    - echo "Creating virtual machine with Debian11"
    - 'curl --location "http://qapi.datto.net/v1/agent" --header "Content-Type: application/json" --data "{\"os\":\"debian11\",\"agent_type\":\"\",\"region\":\"nwk\",\"ttl\":1}" > createVmOutput.txt'
    - OUTPUT=$(cat createVmOutput.txt)
    - echo $OUTPUT
    - DEBIAN11_VM_ID=$(echo $OUTPUT | grep -o -P 'id.{0,9}' | cut -c 6-11)
    - echo "DEBIAN11_VM_ID=$DEBIAN11_VM_ID" >> variables_debian11.txt
    - echo "Sleep for 3 minutes to wait for VM to be ready..."
    - sleep 180
    - curl -X GET http://qapi.datto.net/v1/agent/$DEBIAN11_VM_ID
    - DEBIAN11_VM_IP=$(curl -X GET http://qapi.datto.net/v1/agent/$DEBIAN11_VM_ID | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}')
    - echo "DEBIAN11_VM_IP=$DEBIAN11_VM_IP" >> variables_debian11.txt
  artifacts:
    reports:
      dotenv: variables_debian11.txt

create:ubuntu1804:vm:
  stage: create vm
  tags:
    - docker-throttled
  script:
    - apt-get update -y
    - apt-get install curl -y
    - echo "Creating virtual machine with Ubuntu1804"
    - 'curl --location "http://qapi.datto.net/v1/agent" --header "Content-Type: application/json" --data "{\"os\":\"ubuntu1804\",\"agent_type\":\"\",\"region\":\"nwk\",\"ttl\":1}" > createVmOutput.txt'
    - OUTPUT=$(cat createVmOutput.txt)
    - echo $OUTPUT
    - UBUNTU1804_VM_ID=$(echo $OUTPUT | grep -o -P 'id.{0,9}' | cut -c 6-11)
    - echo "UBUNTU1804_VM_ID=$UBUNTU1804_VM_ID" >> variables_ubuntu1804.txt
    - echo "Sleep for 3 minutes to wait for VM to be ready..."
    - sleep 180
    - curl -X GET http://qapi.datto.net/v1/agent/$UBUNTU1804_VM_ID
    - UBUNTU1804_VM_IP=$(curl -X GET http://qapi.datto.net/v1/agent/$UBUNTU1804_VM_ID | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}')
    - echo "UBUNTU1804_VM_IP=$UBUNTU1804_VM_IP" >> variables_ubuntu1804.txt
  artifacts:
    reports:
      dotenv: variables_ubuntu1804.txt

create:ubuntu2004:vm:
  stage: create vm
  tags:
    - docker-throttled
  script:
    - apt-get update -y
    - apt-get install curl -y
    - echo "Creating virtual machine with Ubuntu2004"
    - 'curl --location "http://qapi.datto.net/v1/agent" --header "Content-Type: application/json" --data "{\"os\":\"ubuntu2004\",\"agent_type\":\"\",\"region\":\"nwk\",\"ttl\":1}" > createVmOutput.txt'
    - OUTPUT=$(cat createVmOutput.txt)
    - echo $OUTPUT
    - UBUNTU2004_VM_ID=$(echo $OUTPUT | grep -o -P 'id.{0,9}' | cut -c 6-11)
    - echo "UBUNTU2004_VM_ID=$UBUNTU2004_VM_ID" >> variables_ubuntu2004.txt
    - echo "Sleep for 3 minutes to wait for VM to be ready..."
    - sleep 180
    - curl -X GET http://qapi.datto.net/v1/agent/$UBUNTU2004_VM_ID
    - UBUNTU2004_VM_IP=$(curl -X GET http://qapi.datto.net/v1/agent/$UBUNTU2004_VM_ID | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}')
    - echo "UBUNTU2004_VM_IP=$UBUNTU2004_VM_IP" >> variables_ubuntu2004.txt
  artifacts:
    reports:
      dotenv: variables_ubuntu2004.txt

create:ubuntu2204:vm:
  stage: create vm
  tags:
    - docker-throttled
  script:
    - apt-get update -y
    - apt-get install curl -y
    - echo "Creating virtual machine with Ubuntu2204"
    - 'curl --location "http://qapi.datto.net/v1/agent" --header "Content-Type: application/json" --data "{\"os\":\"ubuntu2204\",\"agent_type\":\"\",\"region\":\"nwk\",\"ttl\":1}" > createVmOutput.txt'
    - OUTPUT=$(cat createVmOutput.txt)
    - echo $OUTPUT
    - UBUNTU2204_VM_ID=$(echo $OUTPUT | grep -o -P 'id.{0,9}' | cut -c 6-11)
    - echo "UBUNTU2204_VM_ID=$UBUNTU2204_VM_ID" >> variables_ubuntu2204.txt
    - echo "Sleep for 3 minutes to wait for VM to be ready..."
    - sleep 180
    - curl -X GET http://qapi.datto.net/v1/agent/$UBUNTU2204_VM_ID
    - UBUNTU2204_VM_IP=$(curl -X GET http://qapi.datto.net/v1/agent/$UBUNTU2204_VM_ID | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}')
    - echo "UBUNTU2204_VM_IP=$UBUNTU2204_VM_IP" >> variables_ubuntu2204.txt
  artifacts:
    reports:
      dotenv: variables_ubuntu2204.txt

create:centos8:vm:
  stage: create vm
  tags:
    - docker-throttled
  script:
    - apt-get update -y
    - apt-get install curl -y
    - echo "Creating virtual machine with CentOS8"
    - 'curl --location "http://qapi.datto.net/v1/agent" --header "Content-Type: application/json" --data "{\"os\":\"centos8\",\"agent_type\":\"\",\"region\":\"nwk\",\"ttl\":1}" > createVmOutput.txt'
    - OUTPUT=$(cat createVmOutput.txt)
    - echo $OUTPUT
    - CENTOS8_VM_ID=$(echo $OUTPUT | grep -o -P 'id.{0,9}' | cut -c 6-11)
    - echo "CENTOS8_VM_ID=$CENTOS8_VM_ID" >> variables_centos8.txt
    - echo "Sleep for 3 minutes to wait for VM to be ready..."
    - sleep 180
    - curl -X GET http://qapi.datto.net/v1/agent/$CENTOS8_VM_ID
    - CENTOS8_VM_IP=$(curl -X GET http://qapi.datto.net/v1/agent/$CENTOS8_VM_ID | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}')
    - echo "CENTOS8_VM_IP=$CENTOS8_VM_IP" >> variables_centos8.txt
  artifacts:
    reports:
      dotenv: variables_centos8.txt
